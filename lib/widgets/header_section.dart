import 'package:flutter/material.dart';
import '../utils/constants.dart';

class HeaderSection extends StatelessWidget {
  const HeaderSection({super.key});

  @override
  Widget build(BuildContext context) {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 20),
      decoration: BoxDecoration(
        gradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [
            AppConstants.primaryColor.withValues(alpha: 0.1),
            AppConstants.secondaryColor.withValues(alpha: 0.05),
          ],
        ),
        border: Border(
          bottom: BorderSide(
            color: AppConstants.primaryColor.withValues(alpha: 0.2),
            width: 1,
          ),
        ),
      ),
      child: SafeArea(
        bottom: false,
        child: Row(
          children: [
            // ÏôºÏ™Ω ÏïÑÏù¥ÏΩò (cskang.jpg)
            Container(
              width: 48,
              height: 48,
              decoration: BoxDecoration(
                borderRadius: BorderRadius.circular(24),
                border: Border.all(
                  color: AppConstants.primaryColor.withValues(alpha: 0.3),
                  width: 2,
                ),
                boxShadow: [
                  BoxShadow(
                    color: Colors.black.withValues(alpha: 0.3),
                    blurRadius: 8,
                    offset: const Offset(0, 2),
                  ),
                ],
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(22),
                child: Image.asset(
                  'assets/images/cskang.jpg',
                  fit: BoxFit.cover,
                  errorBuilder: (context, error, stackTrace) {
                    // Ïù¥ÎØ∏ÏßÄ Î°úÎìú Ïã§Ìå®Ïãú Í∏∞Î≥∏ ÏïÑÏù¥ÏΩò ÌëúÏãú
                    return Container(
                      color: AppConstants.primaryColor.withValues(alpha: 0.2),
                      child: Icon(
                        Icons.person,
                        color: AppConstants.primaryColor,
                        size: 28,
                      ),
                    );
                  },
                ),
              ),
            ),

            const SizedBox(width: 16),

            // Ïï± Ï†úÎ™©Í≥º ÏÑúÎ∏åÌÉÄÏù¥ÌãÄ
            Expanded(
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    'ÏòÅÏñ¥ ÎßéÏù¥ Îì£Ïûê!',
                    style: TextStyle(
                      fontSize: 24,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                      letterSpacing: 0.5,
                    ),
                  ),
                  const SizedBox(height: 4),
                  Text(
                    'ÏòÅÌôî ÎåÄÏÇ¨Î°ú Ï∞æÎäî Î™ÖÏû•Î©¥',
                    style: TextStyle(
                      fontSize: 14,
                      color: Colors.grey[400],
                      fontWeight: FontWeight.w400,
                    ),
                  ),
                ],
              ),
            ),

            // Ïò§Î•∏Ï™Ω Ïï°ÏÖò Î≤ÑÌäºÎì§
            Row(
              mainAxisSize: MainAxisSize.min,
              children: [
                // ÏÑ§Ï†ï Î≤ÑÌäº
                IconButton(
                  onPressed: () {
                    // ÏÑ§Ï†ï Í∏∞Îä• Ï∂îÍ∞Ä Í∞ÄÎä•
                    print('‚öôÔ∏è ÏÑ§Ï†ï Î≤ÑÌäº ÌÅ¥Î¶≠Îê®');
                  },
                  icon: Icon(
                    Icons.settings_outlined,
                    color: Colors.grey[400],
                    size: 24,
                  ),
                  tooltip: 'ÏÑ§Ï†ï',
                ),

                // ÎèÑÏõÄÎßê Î≤ÑÌäº
                IconButton(
                  onPressed: () {
                    // ÎèÑÏõÄÎßê Í∏∞Îä• Ï∂îÍ∞Ä Í∞ÄÎä•
                    _showHelpDialog(context);
                  },
                  icon: Icon(
                    Icons.help_outline,
                    color: Colors.grey[400],
                    size: 24,
                  ),
                  tooltip: 'ÎèÑÏõÄÎßê',
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }

  void _showHelpDialog(BuildContext context) {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        backgroundColor: AppConstants.cardColor,
        title: Text('ÎèÑÏõÄÎßê', style: TextStyle(color: Colors.white)),
        content: Column(
          mainAxisSize: MainAxisSize.min,
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'üé¨ Movie Phrase Search ÏÇ¨Ïö©Î≤ï:',
              style: TextStyle(
                color: Colors.white,
                fontWeight: FontWeight.bold,
              ),
            ),
            const SizedBox(height: 12),
            _buildHelpItem('üîç', 'ÌÖçÏä§Ìä∏ Í≤ÄÏÉâ', 'ÏòÅÌôî ÎåÄÏÇ¨Î•º ÏßÅÏ†ë ÏûÖÎ†•ÌïòÏó¨ Í≤ÄÏÉâ'),
            _buildHelpItem('üé§', 'ÏùåÏÑ± Í≤ÄÏÉâ', 'ÎßàÏù¥ÌÅ¨ Î≤ÑÌäºÏúºÎ°ú 11.5Ï¥àÍ∞Ñ ÏùåÏÑ± Ïù∏Ïãù'),
            _buildHelpItem('üåè', 'ÏûêÎèô Î≤àÏó≠', 'ÌïúÍµ≠Ïñ¥ ÏûÖÎ†•Ïãú ÏòÅÏñ¥Î°ú ÏûêÎèô Î≤àÏó≠'),
            _buildHelpItem('üé•', 'ÎπÑÎîîÏò§ Ïû¨ÏÉù', 'Ìè¨Ïä§ÌÑ∞ ÌÅ¥Î¶≠ÌïòÏó¨ Ìï¥Îãπ Ïû•Î©¥ ÏãúÏ≤≠'),
            _buildHelpItem('üìú', 'Í≤ÄÏÉâ Í∏∞Î°ù', 'ÏµúÍ∑º Í≤ÄÏÉâÏñ¥Î•º Îã§Ïãú ÌÅ¥Î¶≠ÌïòÏó¨ Ïû¨Í≤ÄÏÉâ'),
          ],
        ),
        actions: [
          TextButton(
            onPressed: () => Navigator.pop(context),
            child: Text(
              'ÌôïÏù∏',
              style: TextStyle(color: AppConstants.primaryColor),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildHelpItem(String icon, String title, String description) {
    return Padding(
      padding: const EdgeInsets.only(bottom: 8),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(icon, style: const TextStyle(fontSize: 16)),
          const SizedBox(width: 8),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  title,
                  style: TextStyle(
                    color: AppConstants.primaryColor,
                    fontWeight: FontWeight.w600,
                    fontSize: 14,
                  ),
                ),
                Text(
                  description,
                  style: TextStyle(color: Colors.grey[400], fontSize: 12),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}
